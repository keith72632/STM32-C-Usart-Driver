
uart_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000021c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c4  080003cc  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003c4  080003c4  000103cc  2**0
                  CONTENTS
  4 .ARM          00000000  080003c4  080003c4  000103cc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003c4  080003cc  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c4  080003c4  000103c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003c8  080003c8  000103c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103cc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000116b  00000000  00000000  000103f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002f7  00000000  00000000  00011561  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00011858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000050  00000000  00000000  000118c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000020ed  00000000  00000000  00011910  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000008f7  00000000  00000000  000139fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008ee8  00000000  00000000  000142f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001d1dc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000f8  00000000  00000000  0001d230  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080003ac 	.word	0x080003ac

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080003ac 	.word	0x080003ac

080001e8 <_Z10usart2_clkv>:
 */

#include <stdint.h>
#include <stdlib.h>
void usart2_clk()
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	//enable gpio a clock
	uint32_t *gpioa = (uint32_t*)0x40023830;
 80001ee:	4b0a      	ldr	r3, [pc, #40]	; (8000218 <_Z10usart2_clkv+0x30>)
 80001f0:	607b      	str	r3, [r7, #4]
	*gpioa |= (1 << 0);
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	f043 0201 	orr.w	r2, r3, #1
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	601a      	str	r2, [r3, #0]
	uint32_t *clk = (uint32_t*)0x40023840;
 80001fe:	4b07      	ldr	r3, [pc, #28]	; (800021c <_Z10usart2_clkv+0x34>)
 8000200:	603b      	str	r3, [r7, #0]
	*clk |= (1 << 17);
 8000202:	683b      	ldr	r3, [r7, #0]
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800020a:	683b      	ldr	r3, [r7, #0]
 800020c:	601a      	str	r2, [r3, #0]
}
 800020e:	bf00      	nop
 8000210:	370c      	adds	r7, #12
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	40023830 	.word	0x40023830
 800021c:	40023840 	.word	0x40023840

08000220 <_Z11usart2_initv>:

void usart2_init()
{
 8000220:	b480      	push	{r7}
 8000222:	b085      	sub	sp, #20
 8000224:	af00      	add	r7, sp, #0
	//configure pins
	uint32_t *gpioa_mode = (uint32_t*)0x40020000;
 8000226:	4b18      	ldr	r3, [pc, #96]	; (8000288 <_Z11usart2_initv+0x68>)
 8000228:	60fb      	str	r3, [r7, #12]
	*gpioa_mode |= (2 << 4) | (2 << 6);
 800022a:	68fb      	ldr	r3, [r7, #12]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	f043 02a0 	orr.w	r2, r3, #160	; 0xa0
 8000232:	68fb      	ldr	r3, [r7, #12]
 8000234:	601a      	str	r2, [r3, #0]
	uint32_t *gpio_alt = (uint32_t*)0x40020020;
 8000236:	4b15      	ldr	r3, [pc, #84]	; (800028c <_Z11usart2_initv+0x6c>)
 8000238:	60bb      	str	r3, [r7, #8]
	*gpio_alt |= (7 << 8) | (7 << 12);
 800023a:	68bb      	ldr	r3, [r7, #8]
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f443 42ee 	orr.w	r2, r3, #30464	; 0x7700
 8000242:	68bb      	ldr	r3, [r7, #8]
 8000244:	601a      	str	r2, [r3, #0]

	uint32_t *cr1 = (uint32_t*)0x4000440c;
 8000246:	4b12      	ldr	r3, [pc, #72]	; (8000290 <_Z11usart2_initv+0x70>)
 8000248:	607b      	str	r3, [r7, #4]
	uint32_t *brr = (uint32_t*)0x40004408;
 800024a:	4b12      	ldr	r3, [pc, #72]	; (8000294 <_Z11usart2_initv+0x74>)
 800024c:	603b      	str	r3, [r7, #0]

	*cr1 &= 0x00;
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	2200      	movs	r2, #0
 8000252:	601a      	str	r2, [r3, #0]
	*cr1 |= (1 << 13);
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	601a      	str	r2, [r3, #0]
	*brr |= (3 << 0) | (104 << 4);
 8000260:	683b      	ldr	r3, [r7, #0]
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	f443 63d0 	orr.w	r3, r3, #1664	; 0x680
 8000268:	f043 0303 	orr.w	r3, r3, #3
 800026c:	683a      	ldr	r2, [r7, #0]
 800026e:	6013      	str	r3, [r2, #0]
	*cr1 |= (1 << 2) | (1 << 3);
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	f043 020c 	orr.w	r2, r3, #12
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	601a      	str	r2, [r3, #0]

}
 800027c:	bf00      	nop
 800027e:	3714      	adds	r7, #20
 8000280:	46bd      	mov	sp, r7
 8000282:	bc80      	pop	{r7}
 8000284:	4770      	bx	lr
 8000286:	bf00      	nop
 8000288:	40020000 	.word	0x40020000
 800028c:	40020020 	.word	0x40020020
 8000290:	4000440c 	.word	0x4000440c
 8000294:	40004408 	.word	0x40004408

08000298 <_Z11usart2_sendc>:

void usart2_send(char c)
{
 8000298:	b480      	push	{r7}
 800029a:	b085      	sub	sp, #20
 800029c:	af00      	add	r7, sp, #0
 800029e:	4603      	mov	r3, r0
 80002a0:	71fb      	strb	r3, [r7, #7]
	uint32_t *dr = (uint32_t*)0x40004404;
 80002a2:	4b09      	ldr	r3, [pc, #36]	; (80002c8 <_Z11usart2_sendc+0x30>)
 80002a4:	60fb      	str	r3, [r7, #12]
	uint32_t *sr = (uint32_t*)0x40004400;
 80002a6:	4b09      	ldr	r3, [pc, #36]	; (80002cc <_Z11usart2_sendc+0x34>)
 80002a8:	60bb      	str	r3, [r7, #8]

	*dr = c;
 80002aa:	79fa      	ldrb	r2, [r7, #7]
 80002ac:	68fb      	ldr	r3, [r7, #12]
 80002ae:	601a      	str	r2, [r3, #0]
	while(!(*sr & (1<<6)));
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d100      	bne.n	80002be <_Z11usart2_sendc+0x26>
 80002bc:	e7f8      	b.n	80002b0 <_Z11usart2_sendc+0x18>
}
 80002be:	bf00      	nop
 80002c0:	3714      	adds	r7, #20
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bc80      	pop	{r7}
 80002c6:	4770      	bx	lr
 80002c8:	40004404 	.word	0x40004404
 80002cc:	40004400 	.word	0x40004400

080002d0 <_Z5delayv>:

void delay()
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
	for(size_t i = 0; i < 1000000; i++){};
 80002d6:	2300      	movs	r3, #0
 80002d8:	607b      	str	r3, [r7, #4]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4a05      	ldr	r2, [pc, #20]	; (80002f4 <_Z5delayv+0x24>)
 80002de:	4293      	cmp	r3, r2
 80002e0:	d803      	bhi.n	80002ea <_Z5delayv+0x1a>
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	3301      	adds	r3, #1
 80002e6:	607b      	str	r3, [r7, #4]
 80002e8:	e7f7      	b.n	80002da <_Z5delayv+0xa>
}
 80002ea:	bf00      	nop
 80002ec:	370c      	adds	r7, #12
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bc80      	pop	{r7}
 80002f2:	4770      	bx	lr
 80002f4:	000f423f 	.word	0x000f423f

080002f8 <main>:

int main(void)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	af00      	add	r7, sp, #0
	usart2_clk();
 80002fc:	f7ff ff74 	bl	80001e8 <_Z10usart2_clkv>

	usart2_init();
 8000300:	f7ff ff8e 	bl	8000220 <_Z11usart2_initv>

    /* Loop forever */
	while(1)
	{
		usart2_send('x');
 8000304:	2078      	movs	r0, #120	; 0x78
 8000306:	f7ff ffc7 	bl	8000298 <_Z11usart2_sendc>
		delay();
 800030a:	f7ff ffe1 	bl	80002d0 <_Z5delayv>
		usart2_send('x');
 800030e:	e7f9      	b.n	8000304 <main+0xc>

08000310 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000310:	480d      	ldr	r0, [pc, #52]	; (8000348 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000312:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000314:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000318:	480c      	ldr	r0, [pc, #48]	; (800034c <LoopForever+0x6>)
  ldr r1, =_edata
 800031a:	490d      	ldr	r1, [pc, #52]	; (8000350 <LoopForever+0xa>)
  ldr r2, =_sidata
 800031c:	4a0d      	ldr	r2, [pc, #52]	; (8000354 <LoopForever+0xe>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000320:	e002      	b.n	8000328 <LoopCopyDataInit>

08000322 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000322:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000324:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000326:	3304      	adds	r3, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000328:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800032c:	d3f9      	bcc.n	8000322 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032e:	4a0a      	ldr	r2, [pc, #40]	; (8000358 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000330:	4c0a      	ldr	r4, [pc, #40]	; (800035c <LoopForever+0x16>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000334:	e001      	b.n	800033a <LoopFillZerobss>

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000336:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000338:	3204      	adds	r2, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033e:	f000 f811 	bl	8000364 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000342:	f7ff ffd9 	bl	80002f8 <main>

08000346 <LoopForever>:

LoopForever:
    b LoopForever
 8000346:	e7fe      	b.n	8000346 <LoopForever>
  ldr   r0, =_estack
 8000348:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800034c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000350:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000354:	080003cc 	.word	0x080003cc
  ldr r2, =_sbss
 8000358:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800035c:	2000001c 	.word	0x2000001c

08000360 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000360:	e7fe      	b.n	8000360 <ADC_IRQHandler>
	...

08000364 <__libc_init_array>:
 8000364:	b570      	push	{r4, r5, r6, lr}
 8000366:	4d0d      	ldr	r5, [pc, #52]	; (800039c <__libc_init_array+0x38>)
 8000368:	4c0d      	ldr	r4, [pc, #52]	; (80003a0 <__libc_init_array+0x3c>)
 800036a:	1b64      	subs	r4, r4, r5
 800036c:	10a4      	asrs	r4, r4, #2
 800036e:	2600      	movs	r6, #0
 8000370:	42a6      	cmp	r6, r4
 8000372:	d109      	bne.n	8000388 <__libc_init_array+0x24>
 8000374:	4d0b      	ldr	r5, [pc, #44]	; (80003a4 <__libc_init_array+0x40>)
 8000376:	4c0c      	ldr	r4, [pc, #48]	; (80003a8 <__libc_init_array+0x44>)
 8000378:	f000 f818 	bl	80003ac <_init>
 800037c:	1b64      	subs	r4, r4, r5
 800037e:	10a4      	asrs	r4, r4, #2
 8000380:	2600      	movs	r6, #0
 8000382:	42a6      	cmp	r6, r4
 8000384:	d105      	bne.n	8000392 <__libc_init_array+0x2e>
 8000386:	bd70      	pop	{r4, r5, r6, pc}
 8000388:	f855 3b04 	ldr.w	r3, [r5], #4
 800038c:	4798      	blx	r3
 800038e:	3601      	adds	r6, #1
 8000390:	e7ee      	b.n	8000370 <__libc_init_array+0xc>
 8000392:	f855 3b04 	ldr.w	r3, [r5], #4
 8000396:	4798      	blx	r3
 8000398:	3601      	adds	r6, #1
 800039a:	e7f2      	b.n	8000382 <__libc_init_array+0x1e>
 800039c:	080003c4 	.word	0x080003c4
 80003a0:	080003c4 	.word	0x080003c4
 80003a4:	080003c4 	.word	0x080003c4
 80003a8:	080003c8 	.word	0x080003c8

080003ac <_init>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr

080003b8 <_fini>:
 80003b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ba:	bf00      	nop
 80003bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003be:	bc08      	pop	{r3}
 80003c0:	469e      	mov	lr, r3
 80003c2:	4770      	bx	lr
